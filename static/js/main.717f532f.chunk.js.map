{"version":3,"sources":["store/appSlice.js","utils/config.js","components/Input/Input.jsx","components/Button/Button.jsx","store/formSlice.js","components/CustomSelect/CustomSelect.jsx","components/FormRedux/FormRedux.jsx","components/Popup/Popup.jsx","components/App/App.js","store/index.js","index.js"],"names":["appSlice","createSlice","name","initialState","currentUser","isPopupOpen","status","errors","reducers","setCurrentUser","state","action","payload","handlePopup","actions","REG_MANE","REG_EMAIL","REG_PHONE","Input","labelName","inputName","type","onInput","value","placeholder","className","id","Button","onClick","children","isValid","disabled","formSlice","currentLanguage","languageList","isLanguageListOpen","values","email","phone","selectLang","checkboxReg","isFormValid","handleValuesChange","validateMessage","length","test","toggleLanguageListOpen","setCurrentLanguage","toggleCheckboxReg","validateForm","resetForm","CustomSelect","dispatch","useDispatch","useSelector","form","handleSelect","handleSelecetItem","e","target","innerText","selectListClassName","onFocus","onBlur","readOnly","map","item","FormRedux","checkboxClassName","submitButtonClassName","handleChange","handleSubmit","preventDefault","language","to","onSubmit","defaultChecked","Popup","app","handleClosePopup","popupClassName","popupContainerClassName","stopPropagation","App","handleEsc","keyCode","window","addEventListener","removeEventListener","configureStore","reducer","appReduser","formReduser","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"8TAEMA,EAAWC,YAAY,CAC3BC,KAAM,MACNC,aAAc,CACZC,YAAa,GACbC,aAAa,EACbC,OAAQ,KACRC,OAAQ,MAEVC,SAAU,CACRC,eADQ,SACOC,EAAOC,GACpBD,EAAMN,YAAcO,EAAOC,QAC3BF,EAAMJ,QAAS,GAEjBO,YALQ,SAKIH,EAAOC,GACjBD,EAAML,YAAcM,EAAOC,YAK1B,EAGHZ,EAASc,QAFXL,EADK,EACLA,eACAI,EAFK,EAELA,YAGab,IAAf,QC1Bae,EAAW,qGACXC,EAAY,4CAEZC,EAAY,uD,eC2BVC,EA5BD,SAAC,GAQR,IAPLC,EAOI,EAPJA,UACAC,EAMI,EANJA,UACAC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,MACAhB,EAEI,EAFJA,OACAiB,EACI,EADJA,YAEA,OACE,sBAAKC,UAAU,QAAf,UACE,uBAAOA,UAAU,eAAjB,SACGN,IAEH,uBACEE,KAAMA,EACNnB,KAAMkB,EACNM,GAAIN,EACJK,UAAU,mCACVH,QAASA,EACTC,MAAOA,EACPC,YAAaA,IAEf,mBAAGC,UAAU,eAAb,SAA6BlB,QCfpBoB,G,MARA,SAAC,GAAqD,IAAnDN,EAAkD,EAAlDA,KAAMI,EAA4C,EAA5CA,UAAWG,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACpD,OACE,wBAAQC,SAAUD,EAAST,KAAMA,EAAMI,UAAWA,EAAWG,QAASA,EAAtE,SACGC,M,sBCFDG,EAAY/B,YAAY,CAC5BC,KAAM,OACNC,aAAc,CACZ8B,gBAAiB,2BACjBC,aAAc,CAAC,6CAAW,+DAAc,yDAAa,0DACrDC,oBAAoB,EACpBC,OAAQ,CAAElC,KAAM,GAAImC,MAAO,GAAIC,MAAO,IACtC/B,OAAQ,CAAEL,MAAM,EAAOmC,OAAO,EAAOC,OAAO,GAC5CC,YAAY,EACZC,aAAa,EACbC,aAAa,GAEfjC,SAAU,CACRkC,mBADQ,SACWhC,EAAOC,GACxBD,EAAM0B,OAAN,2BACK1B,EAAM0B,QADX,kBAEGzB,EAAOC,QAAQV,KAAOS,EAAOC,QAAQW,SAG1CoB,gBAPQ,SAOQjC,EAAOC,GACrB,MAAI,SAAAA,EAAOC,QACwB,IAA7BF,EAAM0B,OAAOlC,KAAK0C,YACpBlC,EAAMH,OAAN,2BACKG,EAAMH,QADX,kBAEGI,EAAOC,QAAU,0HAIjBG,EAAS8B,KAAKnC,EAAM0B,OAAOlC,WAOhCQ,EAAMH,OAAN,2BAAoBG,EAAMH,QAA1B,kBAAmCI,EAAOC,SAAU,UANlDF,EAAMH,OAAN,2BACKG,EAAMH,QADX,kBAEGI,EAAOC,QAAU,qOAOpB,UAAAD,EAAOC,QACyB,IAA9BF,EAAM0B,OAAOC,MAAMO,YACrBlC,EAAMH,OAAN,2BACKG,EAAMH,QADX,kBAEGI,EAAOC,QAAU,8GAIjBI,EAAU6B,KAAKnC,EAAM0B,OAAOC,YAOjC3B,EAAMH,OAAN,2BAAoBG,EAAMH,QAA1B,kBAAmCI,EAAOC,SAAU,UANlDF,EAAMH,OAAN,2BACKG,EAAMH,QADX,kBAEGI,EAAOC,QAAU,qHAOD,UAAnBD,EAAOC,QACyB,IAA9BF,EAAM0B,OAAOE,MAAMM,YACrBlC,EAAMH,OAAN,2BACKG,EAAMH,QADX,kBAEGI,EAAOC,QAAU,uLAIjBK,EAAU4B,KAAKnC,EAAM0B,OAAOE,OAO7B5B,EAAM0B,OAAOE,MAAMM,OAAS,QAC9BlC,EAAMH,OAAN,2BACKG,EAAMH,QADX,kBAEGI,EAAOC,QAAU,sMAItBF,EAAMH,OAAN,2BAAoBG,EAAMH,QAA1B,kBAAmCI,EAAOC,SAAU,UAblDF,EAAMH,OAAN,2BACKG,EAAMH,QADX,kBAEGI,EAAOC,QAAU,iQAXxB,GA0BFkC,uBAtEQ,SAsEepC,EAAOC,GAC5BD,EAAMyB,oBAAsBzB,EAAMyB,oBAEpCY,mBAzEQ,SAyEWrC,EAAOC,GACxBD,EAAMuB,gBAAkBtB,EAAOC,QAC/BF,EAAM6B,YAAa,GAErBS,kBA7EQ,SA6EUtC,EAAOC,GACvBD,EAAM8B,aAAe9B,EAAM8B,aAE7BS,aAhFQ,SAgFKvC,GACXA,EAAM+B,aACkB,IAAtB/B,EAAMH,OAAOL,OACU,IAAvBQ,EAAMH,OAAO8B,QACU,IAAvB3B,EAAMH,OAAO+B,QACQ,IAArB5B,EAAM6B,aACgB,IAAtB7B,EAAM8B,aAIVU,UA1FQ,SA0FExC,GACRA,EAAM+B,aAAc,EACpB/B,EAAM0B,OAAS,CAAElC,KAAM,GAAImC,MAAO,GAAIC,MAAO,IAC7C5B,EAAMH,OAAS,CAAEL,MAAM,EAAOmC,OAAO,EAAOC,OAAO,GACnD5B,EAAMuB,gBAAkB,2BACxBvB,EAAM6B,YAAa,EACnB7B,EAAM8B,aAAc,MAKnB,EAQHR,EAAUlB,QAPZ4B,EADK,EACLA,mBACAI,EAFK,EAELA,uBACAC,EAHK,EAGLA,mBACAC,EAJK,EAILA,kBACAL,EALK,EAKLA,gBACAM,EANK,EAMLA,aACAC,EAPK,EAOLA,UAGalB,IAAf,Q,MC3EemB,MA9Cf,YAAsC,IAAdhC,EAAa,EAAbA,UAChBiC,EAAWC,cACjB,EAA8DC,aAC5D,SAAC5C,GAAD,OAAWA,EAAM6C,QADXrB,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,gBAAiBE,EAAvC,EAAuCA,mBAIjCqB,EAAe,WACnBJ,EAASN,MAGLW,EAAoB,SAACC,GACzBN,EAASL,EAAmBW,EAAEC,OAAOC,aAGjCC,EAAmB,uBAAmB1B,EAAqB,sBAAwB,IAEzF,OACE,sBAAKV,UAAU,eAAf,UACE,uBAAOA,UAAU,eAAjB,SAAiCN,IACjC,sBAAKM,UAAU,iBAAf,UACE,uBACEA,UAAU,iDACVqC,QAASN,EACTO,OAAQP,EACRjC,MAAOU,EACP+B,UAAQ,IAEV,qBAAKvC,UAAU,iBACf,oBAAIA,UAAWoC,EAAf,SACG3B,EAAa+B,KAAI,SAACC,GACjB,OACE,oBAEEzC,UAAU,eACVG,QAAS6B,EAHX,SAKGS,GAJIA,eC2ENC,EArGG,WAChB,IAAMf,EAAWC,cACjB,EAAsEC,aAAY,SAAC5C,GAAD,OAAWA,EAAM6C,QAA3FnB,EAAR,EAAQA,OAAQI,EAAhB,EAAgBA,YAAaP,EAA7B,EAA6BA,gBAAiB1B,EAA9C,EAA8CA,OAAQkC,EAAtD,EAAsDA,YAOtD,IAAM2B,EAAiB,yBACrB5B,EAAc,kBAAoB,IAG9B6B,EAAqB,yBACzB5B,EAAc,uBAAyB,0BAGnC6B,EAAe,SAACZ,GACpBN,EACEV,EAAmB,CAAExC,KAAMwD,EAAEC,OAAOzD,KAAMqB,MAAOmC,EAAEC,OAAOpC,SAE5D6B,EAAST,EAAgBe,EAAEC,OAAOzD,OAClCkD,EAASH,MAGLsB,EAAe,SAACb,GACpBA,EAAEc,iBACFpB,EACE3C,EAAe,CACb6B,MAAOF,EAAOE,MACdpC,KAAMkC,EAAOlC,KACbmC,MAAOD,EAAOC,MACdoC,SAAUxC,KAGdmB,EAASF,KACTE,EAASvC,GAAY,KAGvB,OACE,yBAASY,UAAU,OAAnB,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,cAAd,gFACA,sBAAKA,UAAU,iCAAf,UACE,mBAAGA,UAAU,kBAAb,qGACA,cAAC,IAAD,CAASiD,GAAI,UAAWjD,UAAU,sBAAlC,+CAIF,uBAAMkD,SAAUJ,EAAc9C,UAAU,aAAxC,UACE,cAAC,EAAD,CACEJ,KAAK,OACLD,UAAU,OACVD,UAAU,qBACVI,MAAOa,EAAOlC,MAAQ,GACtBoB,QAASgD,EACT/D,OAAQA,EAAOL,KACfsB,YAAY,2FAEd,cAAC,EAAD,CACEH,KAAK,QACLD,UAAU,QACVD,UAAU,QACVI,MAAOa,EAAOC,OAAS,GACvBf,QAASgD,EACT/D,OAAQA,EAAO8B,MACfb,YAAY,wEAEd,cAAC,EAAD,CACEH,KAAK,MACLD,UAAU,QACVD,UAAU,kFACVI,MAAOa,EAAOE,OAAS,GACvBhB,QAASgD,EACT/D,OAAQA,EAAO+B,MACfd,YAAY,+HAEd,cAAC,EAAD,CAAcL,UAAU,6BACxB,sBAAKM,UAAU,iCAAf,UACE,qBAAKA,UAAW2C,EAAmBxC,QA3E7C,SAA6B8B,GAC3BN,EAASJ,KACTI,EAASH,MAyED,SACE,uBAAO5B,KAAK,WAAWnB,KAAK,WAAW0E,eAAgBpC,MAEzD,mBAAGf,UAAU,kBAAb,8DACA,cAAC,IAAD,CAASiD,GAAI,UAAWjD,UAAU,sBAAlC,wDAGA,mBAAGA,UAAU,kBAAb,+FAEF,cAAC,EAAD,CACEJ,KAAK,SACLI,UAAW4C,EACXzC,QAAS2C,EAHX,mICxDKM,G,MArCD,WACZ,IAAMzB,EAAWC,cACjB,EAAqCC,aAAY,SAAC5C,GAAD,OAAWA,EAAMoE,OAA1D1E,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YAEf0E,EAAmB,WACvB3B,EAASvC,GAAY,KAGjBmE,EAAc,gBAClB3E,EAAc,eAAiB,gBAG3B4E,EAAuB,2BAC3B5E,EAAc,0BAA4B,2BAG5C,OACE,yBAASoB,UAAWuD,EAAgBpD,QAASmD,EAA7C,SACE,sBACEtD,UAAWwD,EACXrD,QAAS,SAAC8B,GAAD,OAAOA,EAAEwB,mBAFpB,UAIE,cAAC,EAAD,CACE7D,KAAK,SACLI,UAAU,4BACVG,QAASmD,IAEX,8CACA,4BAAI3E,EAAYF,OAChB,4BAAIE,EAAYiC,QAChB,4BAAIjC,EAAYkC,QAChB,4BAAIlC,EAAYqE,kBCRTU,MAtBf,WACE,IAAM/B,EAAWC,cAGV+B,EAAY,SAAC1B,GPNE,KOOhBA,EAAE2B,SACJjC,EAASvC,GAAY,KAQzB,OAZwByC,aAAY,SAAC5C,GAAD,OAAWA,EAAMoE,OAA7CzE,YASJiF,OAAOC,iBAAiB,UAAWH,GACnCE,OAAOE,oBAAoB,UAAWJ,GAGxC,sBAAK3D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCpBSgE,cAAe,CAC5BC,QAAS,CACPZ,IAAKa,EACLpC,KAAMqC,KCCVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.717f532f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst appSlice = createSlice({\n  name: \"app\",\n  initialState: {\n    currentUser: {},\n    isPopupOpen: false,\n    status: null,\n    errors: null,\n  },\n  reducers: {\n    setCurrentUser(state, action) {\n      state.currentUser = action.payload;\n      state.status = true;\n    },\n    handlePopup(state, action) {\n      state.isPopupOpen = action.payload;\n    },\n  },\n});\n\nexport const {\n  setCurrentUser,\n  handlePopup,\n} = appSlice.actions;\n\nexport default appSlice.reducer;\n","export const REG_MANE = /^[A-Za-zА-Яа-яЁё]+[A-Za-zА-Яа-яЁё -]+$/;\nexport const REG_EMAIL = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\nexport const REG_PHONE = /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/;\n\nexport const ESC_CODE = 27;\nexport const DELAY = 500;\n","import \"./Input.css\";\n\nconst Input = ({\n  labelName,\n  inputName,\n  type,\n  onInput,\n  value,\n  errors,\n  placeholder,\n}) => {\n  return (\n    <div className=\"input\">\n      <label className=\"input__label\">\n        {labelName}\n      </label>\n      <input\n        type={type}\n        name={inputName}\n        id={inputName}\n        className=\"input__field input__field_border\"\n        onInput={onInput}\n        value={value}\n        placeholder={placeholder}\n      />\n      <p className=\"input__error\">{errors}</p>\n    </div>\n  );\n};\n\nexport default Input;\n","import \"./Button.css\";\n\nconst Button = ({ type, className, onClick, children, isValid }) => {\n  return (\n    <button disabled={isValid} type={type} className={className} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { REG_EMAIL, REG_MANE, REG_PHONE } from \"../utils/config\";\n\nconst formSlice = createSlice({\n  name: \"form\",\n  initialState: {\n    currentLanguage: \"Язык\",\n    languageList: [\"Русский\", \"Английский\", \"Китайский\", \"Испанский\"],\n    isLanguageListOpen: false,\n    values: { name: \"\", email: \"\", phone: \"\" },\n    errors: { name: false, email: false, phone: false },\n    selectLang: false,\n    checkboxReg: false,\n    isFormValid: false,\n  },\n  reducers: {\n    handleValuesChange(state, action) {\n      state.values = {\n        ...state.values,\n        [action.payload.name]: action.payload.value,\n      };\n    },\n    validateMessage(state, action) {\n      if (action.payload === `name`) {\n        if (state.values.name.length === 0) {\n          state.errors = {\n            ...state.errors,\n            [action.payload]: \"Необходимо ввести имя\",\n          };\n          return;\n        }\n        if (!REG_MANE.test(state.values.name)) {\n          state.errors = {\n            ...state.errors,\n            [action.payload]: \"Имя должно содержать буквы, тире или пробел\",\n          };\n          return;\n        }\n        state.errors = { ...state.errors, [action.payload]: true };\n        return;\n      }\n      if (action.payload === `email`) {\n        if (state.values.email.length === 0) {\n          state.errors = {\n            ...state.errors,\n            [action.payload]: \"Необходимо ввести E-mail\",\n          };\n          return;\n        }\n        if (!REG_EMAIL.test(state.values.email)) {\n          state.errors = {\n            ...state.errors,\n            [action.payload]: \"Введите корректный E-mail!\",\n          };\n          return;\n        }\n        state.errors = { ...state.errors, [action.payload]: true };\n        return;\n      }\n      if (action.payload === \"phone\") {\n        if (state.values.phone.length === 0) {\n          state.errors = {\n            ...state.errors,\n            [action.payload]: \"Необходимо ввести номер телефона\",\n          };\n          return;\n        }\n        if (!REG_PHONE.test(state.values.phone)) {\n          state.errors = {\n            ...state.errors,\n            [action.payload]: \"Номер может содержать только цифры, - / + / () и пробелы\",\n          };\n          return;\n        }\n        if (state.values.phone.length < 10) {\n          state.errors = {\n            ...state.errors,\n            [action.payload]: \"Номер должен содержать больше 10 цифр\",\n          };\n          return;\n        }\n        state.errors = { ...state.errors, [action.payload]: true };\n        return;\n      }\n    },\n    toggleLanguageListOpen(state, action) {\n      state.isLanguageListOpen = !state.isLanguageListOpen;\n    },\n    setCurrentLanguage(state, action) {\n      state.currentLanguage = action.payload;\n      state.selectLang = true;\n    },\n    toggleCheckboxReg(state, action) {\n      state.checkboxReg = !state.checkboxReg;\n    },\n    validateForm(state) {\n      state.isFormValid =\n        state.errors.name === true &&\n        state.errors.email === true &&\n        state.errors.phone === true &&\n        state.selectLang === true &&\n        state.checkboxReg === true\n          ? true\n          : false;\n    },\n    resetForm(state) {\n      state.isFormValid = false;\n      state.values = { name: \"\", email: \"\", phone: \"\" };\n      state.errors = { name: false, email: false, phone: false };\n      state.currentLanguage = \"Язык\";\n      state.selectLang = false;\n      state.checkboxReg = false;\n    },\n  },\n});\n\nexport const {\n  handleValuesChange,\n  toggleLanguageListOpen,\n  setCurrentLanguage,\n  toggleCheckboxReg,\n  validateMessage,\n  validateForm,\n  resetForm,\n} = formSlice.actions;\n\nexport default formSlice.reducer;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentLanguage, toggleLanguageListOpen } from \"../../store/formSlice\";\nimport \"./CustomSelect.css\";\n\nfunction CustomSelect({ labelName }) {\n  const dispatch = useDispatch();\n  const { languageList, currentLanguage, isLanguageListOpen } = useSelector(\n    (state) => state.form\n  );\n\n  const handleSelect = () => {\n    dispatch(toggleLanguageListOpen());\n  };\n\n  const handleSelecetItem = (e) => {\n    dispatch(setCurrentLanguage(e.target.innerText));\n  };\n\n  const selectListClassName = `select__list ${isLanguageListOpen ? \"select__list_active\" : \"\"}`;\n\n  return (\n    <div className=\"select input\">\n      <label className=\"input__label\">{labelName}</label>\n      <div className=\"select__header\">\n        <input\n          className=\"select__input input__field input__field_border\"\n          onFocus={handleSelect}\n          onBlur={handleSelect}\n          value={currentLanguage}\n          readOnly\n        />\n        <div className=\"select__icon\"></div>\n        <ul className={selectListClassName}>\n          {languageList.map((item) => {\n            return (\n              <li\n                key={item}\n                className=\"select__item\"\n                onClick={handleSelecetItem}\n              >\n                {item}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default CustomSelect;\n","import { useDispatch, useSelector } from \"react-redux\";\n\nimport Input from \"../Input/Input\";\nimport Button from \"../Button/Button\";\n\nimport \"./FormRedux.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { handleValuesChange, resetForm, toggleCheckboxReg, validateForm, validateMessage } from \"../../store/formSlice.js\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nimport { handlePopup, setCurrentUser } from \"../../store/appSlice\";\n\nconst FormRedux = () => {\n  const dispatch = useDispatch();\n  const { values, checkboxReg, currentLanguage, errors, isFormValid } = useSelector((state) => state.form);\n\n  function handleClickCheckbox(e) {\n    dispatch(toggleCheckboxReg());\n    dispatch(validateForm());\n  }\n\n  const checkboxClassName = `form__checkbox ${\n    checkboxReg ? \"checkbox_active\" : \"\"\n  }`;\n\n  const submitButtonClassName = `button__submit ${\n    isFormValid ? \"button__submit_valid\" : \"button__submit_invalid\"\n  }`;\n\n  const handleChange = (e) => {\n    dispatch(\n      handleValuesChange({ name: e.target.name, value: e.target.value })\n    );\n    dispatch(validateMessage(e.target.name));\n    dispatch(validateForm());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      setCurrentUser({\n        phone: values.phone,\n        name: values.name,\n        email: values.email,\n        language: currentLanguage,\n      })\n    );\n    dispatch(resetForm());\n    dispatch(handlePopup(true));\n  };\n\n  return (\n    <section className=\"form\">\n      <div className=\"form__container\">\n        <h2 className=\"form__title\">Регистрация</h2>\n        <div className=\"form__text form__text_redirect\">\n          <p className=\"form__paragraph\">Уже есть аккаунт?</p>\n          <NavLink to={\"/signin\"} className=\"button button__word\">\n            Войти\n          </NavLink>\n        </div>\n        <form onSubmit={handleSubmit} className=\"form__body\">\n          <Input\n            type=\"text\"\n            inputName=\"name\"\n            labelName=\"Имя\"\n            value={values.name || \"\"}\n            onInput={handleChange}\n            errors={errors.name}\n            placeholder=\"Введите Ваше имя\"\n          />\n          <Input\n            type=\"email\"\n            inputName=\"email\"\n            labelName=\"Email\"\n            value={values.email || \"\"}\n            onInput={handleChange}\n            errors={errors.email}\n            placeholder=\"Введите ваш email\"\n          />\n          <Input\n            type=\"tel\"\n            inputName=\"phone\"\n            labelName=\"Номер телефона\"\n            value={values.phone || \"\"}\n            onInput={handleChange}\n            errors={errors.phone}\n            placeholder=\"Введите номер телефона\"\n          />\n          <CustomSelect labelName=\"Язык\" />\n          <div className=\"form__text form__text_checkbox\">\n            <div className={checkboxClassName} onClick={handleClickCheckbox}>\n              <input type=\"checkbox\" name=\"checkbox\" defaultChecked={checkboxReg} />\n            </div>\n            <p className=\"form__paragraph\">принимаю</p>\n            <NavLink to={\"/signin\"} className=\"button button__word\">\n              условия\n            </NavLink>\n            <p className=\"form__paragraph\">использования</p>\n          </div>\n          <Button\n            type=\"button\"\n            className={submitButtonClassName}\n            onClick={handleSubmit}\n          >\n            Зарегистрироваться\n          </Button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default FormRedux;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"../Button/Button\";\nimport { handlePopup } from \"../../store/appSlice\";\n\nimport \"./Popup.css\";\n\nconst Popup = () => {\n  const dispatch = useDispatch();\n  const { currentUser, isPopupOpen } = useSelector((state) => state.app);\n\n  const handleClosePopup = () => {\n    dispatch(handlePopup(false));\n  };\n\n  const popupClassName = `popup ${\n    isPopupOpen ? \"popup_opened\" : \"popup_closed\"\n  }`;\n\n  const popupContainerClassName = `popup__container ${\n    isPopupOpen ? \"popup__container_opened\" : \"popup__container_closed\"\n  }`;\n\n  return (\n    <section className={popupClassName} onClick={handleClosePopup}>\n      <div\n        className={popupContainerClassName}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <Button\n          type=\"button\"\n          className=\"button button__close-menu\"\n          onClick={handleClosePopup}\n        />\n        <h2>Current User</h2>\n        <p>{currentUser.name}</p>\n        <p>{currentUser.email}</p>\n        <p>{currentUser.phone}</p>\n        <p>{currentUser.language}</p>\n      </div>\n    </section>\n  );\n};\n\nexport default Popup;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { handlePopup } from \"../../store/appSlice\";\nimport { ESC_CODE } from \"../../utils/config\";\nimport FormRedux from \"../FormRedux/FormRedux\";\nimport Popup from \"../Popup/Popup\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { isPopupOpen } = useSelector((state) => state.app);\n   // CLOSE POPUP BY ESC\n   const handleEsc = (e) => {\n    if (e.keyCode === ESC_CODE) {\n      dispatch(handlePopup(false));\n    }\n  };\n\n  isPopupOpen\n    ? window.addEventListener(\"keydown\", handleEsc)\n    : window.removeEventListener(\"keydown\", handleEsc);\n\n  return (\n    <div className=\"App\">\n      <FormRedux />\n      <Popup />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport appReduser from \"./appSlice\";\nimport formReduser from \"./formSlice\";\n\nexport default configureStore({\n  reducer: {\n    app: appReduser,\n    form: formReduser,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}